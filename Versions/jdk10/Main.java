package Versions.jdk10;

import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
//JDK10特性
//1. 局部变量类型推断 引入"var"关键字
//局部变量类型推断可以说是Java 10中最值得注意的特性，这是Java语言开发人员为了简化Java应用程序的编写而采取的又一步，如下图所示。
//这个新功能将为Java增加一些语法糖简化它并改善开发者体验。新的语法将减少与编写Java相关的冗长度，同时保持对静态类型安全性的承诺。
//局部变量类型推断将引入"var"关键字，也就是你可以随意定义变量而不必指定变量的类型，如：
//将被下面这个新语法所取代：
        var list = new ArrayList<String>();
        var stream = "dgs";
        //看完是不是有点JS的即视感？？？越来越像JS了吗？！虽然类型推断在Java中不是一个新概念，但在局部变量中确是很大的一个改进。
        //说到类型推断，从JDK 5引进泛型，到JDK 7的"<>"操作符允许不绑定类型而初始化List，再到JDK 8的Lambda表达式，再到现在JDK 10的局部变量类型推断，Java类型推断正大刀阔斧的向前发展。
        //局部变量类型推荐仅限于如下使用场景：
        //局部变量初始化
        //for循环内部索引变量
        //传统的for循环声明变量
        //Java官方表示，它不能用于以下几个地方：
        //方法参数构造函数
        //参数方法
        //返回类型字段
        //捕获表达式（或任何其他类型的变量声明）
        //2. 帮助改进不同垃圾收集器的源代码隔离
        //JDK 10中有2个JEP专门用于改进当前的垃圾收集元素。
        //第一个垃圾收集器接口是（JEP 304），它将引入一个纯净的垃圾收集器接口，以帮助改进不同垃圾收集器的源代码隔离。
        //3. 针对G1的并行完全GC
        //预定用于Java 10的第二个JEP是针对G1的并行完全GC（JEP 307），其重点在于通过完全GC并行来改善G1最坏情况的等待时间。G1是Java 9中的默认GC，并且此JEP的目标是使G1平行。
        //4. 备用内存设备上的堆分配（JEP 316）
        //允许HotSpot VM在备用内存设备上分配Java对象堆内存，该内存设备将由用户指定。
        //5. 其他Unicode语言标记扩展（JEP 314）
        //目标是增强java.util.Locale及其相关的API，以便实现语言标记语法的其他Unicode扩展（BCP 47）。
        //6. 基于Java的实验性JIT编译器
        //Oracle希望将其Java JIT编译器Graal用作Linux / x64平台上的实验性JIT编译器。
        //7. 根证书（JEP 319）
        //这个的目标是在Oracle的Java SE中开源根证书。
        //8. 根证书颁发认证 减少OpenJDK和Oracle JDK构建之间的差异
        //这将使OpenJDK对开发人员更具吸引力，它还旨在减少OpenJDK和Oracle JDK构建之间的差异。
        //9. 将JDK生态整合众多存储库为单个存储库（JEP 296）
        //此JEP的主要目标是执行一些内存管理，并将JDK生态的众多存储库组合到一个存储库中。
        //10. 删除工具javah（JEP 313）
        //从JDK中移除了javah工具，这个很简单并且很重要。
        //11. 线程本地握手（JEP 312） 线程上执行回调
        //JDK 10将引入一种在线程上执行回调的新方法，因此这将会很方便能停止单个线程而不是停止全部线程或者一个都不停。
    }
}
